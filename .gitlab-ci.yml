# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  #- deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - "u20"
  script:
    - sudo docker build -t alan0415/odlux-onos-agent:latest .
    #- echo "Compile complete."

start-docker-images:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  tags:
    - "u20"
  script:
    - sudo docker run -d --name=gitlab-runner-test -p 8000:8000 alan0415/odlux-agent:latest
    #- sleep 60
    #- echo "Code coverage is 90%"

api-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  tags:
    - "u20"
  script:
    - curl -X GET -u admin:Kp8bJ4SXszM0WXlhak3eHlcse2gAw84vaoGGmJvUy2U 127.0.0.1:8000 /v1/status
    - sleep 10
    - echo "No lint issues found."

stop-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  tags:
    - "u20"
  script:
    - sudo docker stop gitlab-runner-test
    - sudo docker rm gitlab-runner-test
    - echo "Stop and rm docker container"

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
